76c181b344884da323a56125dd3964b8
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.updateProfile = exports.setLogout = exports.setLogin = exports["default"] = exports.authSlice = void 0;
var _toolkit = require("@reduxjs/toolkit");
var initialState = {
  user: null,
  token: null,
  users: []
};
var authSlice = (0, _toolkit.createSlice)({
  name: "auth",
  initialState: initialState,
  reducers: {
    setLogin: function setLogin(state, action) {
      state.user = action.payload.user;
      state.token = action.payload.token;
    },
    setLogout: function setLogout(state) {
      state.user = null;
      state.token = null;
    },
    updateProfile: function updateProfile(state, action) {
      state.user = action.payload.user;
    }
  }
});
exports.authSlice = authSlice;
var _authSlice$actions = authSlice.actions,
  setLogin = _authSlice$actions.setLogin,
  setLogout = _authSlice$actions.setLogout,
  updateProfile = _authSlice$actions.updateProfile;
exports.updateProfile = updateProfile;
exports.setLogout = setLogout;
exports.setLogin = setLogin;
var _default = authSlice.reducer;
exports["default"] = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJpbml0aWFsU3RhdGUiLCJ1c2VyIiwidG9rZW4iLCJ1c2VycyIsImF1dGhTbGljZSIsImNyZWF0ZVNsaWNlIiwibmFtZSIsInJlZHVjZXJzIiwic2V0TG9naW4iLCJzdGF0ZSIsImFjdGlvbiIsInBheWxvYWQiLCJzZXRMb2dvdXQiLCJ1cGRhdGVQcm9maWxlIiwiYWN0aW9ucyIsInJlZHVjZXIiXSwic291cmNlcyI6WyJpbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVTbGljZSB9IGZyb20gXCJAcmVkdXhqcy90b29sa2l0XCI7XG5cbmNvbnN0IGluaXRpYWxTdGF0ZSA9IHtcbiAgdXNlcjogbnVsbCxcbiAgdG9rZW46IG51bGwsXG4gIHVzZXJzOiBbXSxcbn07XG5cbmV4cG9ydCBjb25zdCBhdXRoU2xpY2UgPSBjcmVhdGVTbGljZSh7XG4gIG5hbWU6IFwiYXV0aFwiLFxuICBpbml0aWFsU3RhdGUsXG4gIHJlZHVjZXJzOiB7XG4gICAgc2V0TG9naW46IChzdGF0ZSwgYWN0aW9uKSA9PiB7XG4gICAgICBzdGF0ZS51c2VyID0gYWN0aW9uLnBheWxvYWQudXNlcjtcbiAgICAgIHN0YXRlLnRva2VuID0gYWN0aW9uLnBheWxvYWQudG9rZW47XG4gICAgfSxcbiAgICBzZXRMb2dvdXQ6IChzdGF0ZSkgPT4ge1xuICAgICAgc3RhdGUudXNlciA9IG51bGw7XG4gICAgICBzdGF0ZS50b2tlbiA9IG51bGw7XG4gICAgfSxcbiAgICB1cGRhdGVQcm9maWxlOiAoc3RhdGUsIGFjdGlvbikgPT4ge1xuICAgICAgc3RhdGUudXNlciA9IGFjdGlvbi5wYXlsb2FkLnVzZXI7XG4gICAgfSxcbiAgfSxcbn0pO1xuXG5leHBvcnQgY29uc3QgeyBzZXRMb2dpbiwgc2V0TG9nb3V0LCB1cGRhdGVQcm9maWxlIH0gPSBhdXRoU2xpY2UuYWN0aW9ucztcbmV4cG9ydCBkZWZhdWx0IGF1dGhTbGljZS5yZWR1Y2VyO1xuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUVBLElBQU1BLFlBQVksR0FBRztFQUNuQkMsSUFBSSxFQUFFLElBQUk7RUFDVkMsS0FBSyxFQUFFLElBQUk7RUFDWEMsS0FBSyxFQUFFO0FBQ1QsQ0FBQztBQUVNLElBQU1DLFNBQVMsR0FBRyxJQUFBQyxvQkFBVyxFQUFDO0VBQ25DQyxJQUFJLEVBQUUsTUFBTTtFQUNaTixZQUFZLEVBQVpBLFlBQVk7RUFDWk8sUUFBUSxFQUFFO0lBQ1JDLFFBQVEsRUFBRSxrQkFBQ0MsS0FBSyxFQUFFQyxNQUFNLEVBQUs7TUFDM0JELEtBQUssQ0FBQ1IsSUFBSSxHQUFHUyxNQUFNLENBQUNDLE9BQU8sQ0FBQ1YsSUFBSTtNQUNoQ1EsS0FBSyxDQUFDUCxLQUFLLEdBQUdRLE1BQU0sQ0FBQ0MsT0FBTyxDQUFDVCxLQUFLO0lBQ3BDLENBQUM7SUFDRFUsU0FBUyxFQUFFLG1CQUFDSCxLQUFLLEVBQUs7TUFDcEJBLEtBQUssQ0FBQ1IsSUFBSSxHQUFHLElBQUk7TUFDakJRLEtBQUssQ0FBQ1AsS0FBSyxHQUFHLElBQUk7SUFDcEIsQ0FBQztJQUNEVyxhQUFhLEVBQUUsdUJBQUNKLEtBQUssRUFBRUMsTUFBTSxFQUFLO01BQ2hDRCxLQUFLLENBQUNSLElBQUksR0FBR1MsTUFBTSxDQUFDQyxPQUFPLENBQUNWLElBQUk7SUFDbEM7RUFDRjtBQUNGLENBQUMsQ0FBQztBQUFDO0FBRUkseUJBQStDRyxTQUFTLENBQUNVLE9BQU87RUFBeEROLFFBQVEsc0JBQVJBLFFBQVE7RUFBRUksU0FBUyxzQkFBVEEsU0FBUztFQUFFQyxhQUFhLHNCQUFiQSxhQUFhO0FBQXVCO0FBQUE7QUFBQTtBQUFBLGVBQ3pEVCxTQUFTLENBQUNXLE9BQU87QUFBQSJ9