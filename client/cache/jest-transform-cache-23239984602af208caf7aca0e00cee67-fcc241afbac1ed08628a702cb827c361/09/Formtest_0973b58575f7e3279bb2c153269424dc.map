{"version":3,"names":["mock","jest","requireActual","useNavigate","mockedUsedNavigate","require","Form","fn","afterEach","cleanup","test","renderWithProviders","expect","screen","getByRole","type","toBeDisabled","emailInput","name","userEvent","passwordInput","getByLabelText","toBeEnabled","clear","handleSubmit","values","undefined","submitButton","act","click","waitFor","toHaveBeenCalledTimes"],"sources":["Form.test.js"],"sourcesContent":["import { renderWithProviders } from \"../../test-utils\";\r\nimport React from \"react\";\r\nimport \"@testing-library/jest-dom/extend-expect\";\r\nimport { screen, cleanup, waitFor, act } from \"@testing-library/react\";\r\nimport userEvent from \"@testing-library/user-event\";\r\n\r\nconst { default: Form } = require(\"./Form\");\r\n\r\nconst mockedUsedNavigate = jest.fn();\r\n\r\njest.mock(\"react-router-dom\", () => ({\r\n  ...jest.requireActual(\"react-router-dom\"),\r\n  useNavigate: () => mockedUsedNavigate,\r\n}));\r\n\r\nafterEach(() => {\r\n  cleanup();\r\n});\r\n\r\ntest(\"on initial render, login button should be disabled\", () => {\r\n  renderWithProviders(<Form />);\r\n  expect(screen.getByRole(\"button\", { type: /submit/i })).toBeDisabled();\r\n});\r\n\r\ntest(\"if form is filled, login button should be enabled\", async () => {\r\n  renderWithProviders(<Form />);\r\n\r\n  const emailInput = screen.getByRole(\"textbox\", { name: /email/i });\r\n  await userEvent.type(emailInput, \"someemail@test.com\");\r\n  const passwordInput = screen.getByLabelText(/password/i);\r\n  await userEvent.type(passwordInput, \"1234567890\");\r\n\r\n  expect(screen.getByRole(\"button\", { type: /submit/i })).toBeEnabled();\r\n\r\n  userEvent.clear(emailInput);\r\n  userEvent.clear(passwordInput);\r\n});\r\n\r\ntest(\"Success submit\", async () => {\r\n  const handleSubmit = jest.fn((values) => {});\r\n  renderWithProviders(\r\n    <Form\r\n      handleSubmit={handleSubmit}\r\n      pageType=\"login\"\r\n      error=\"\"\r\n      setPageType={undefined}\r\n    />\r\n  );\r\n\r\n  const emailInput = screen.getByRole(\"textbox\", { name: /email/i });\r\n  await userEvent.type(emailInput, \"someemail@test.com\");\r\n\r\n  const passwordInput = screen.getByLabelText(/password/i);\r\n  await userEvent.type(passwordInput, \"1234567890\");\r\n\r\n  const submitButton = screen.getByRole(\"button\", { type: /submit/i });\r\n\r\n  await act(async () => {\r\n    userEvent.click(submitButton);\r\n  });\r\n\r\n  await waitFor(() => {\r\n    expect(handleSubmit).toHaveBeenCalledTimes(1);\r\n  });\r\n});\r\n"],"mappings":"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"}