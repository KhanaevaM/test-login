{"version":3,"names":["renderWithProviders","ui","preloadedState","store","setupStore","renderOptions","Wrapper","children","render","wrapper"],"sources":["test-utils.js"],"sourcesContent":["import React from \"react\";\r\nimport { render } from \"@testing-library/react\";\r\nimport { setupStore } from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\n// As a basic setup, import your same slice reducers\r\nimport authReducer from \"./state\";\r\n\r\nexport function renderWithProviders(\r\n  ui,\r\n  {\r\n    preloadedState = {},\r\n    // Automatically create a store instance if no store was passed in\r\n    store = setupStore(preloadedState),\r\n    ...renderOptions\r\n  } = {}\r\n) {\r\n  function Wrapper({ children }) {\r\n    return <Provider store={store}>{children}</Provider>;\r\n  }\r\n  return { store, ...render(ui, { wrapper: Wrapper, ...renderOptions }) };\r\n}\r\n\r\n// export const mockLocalStorage = {\r\n//   getItem: jest.fn().mockImplementation((key) => localStorageItems[key]),\r\n//   setItem: jest.fn().mockImplementation((key, value) => {\r\n//     localStorageItems[key] = value;\r\n//   }),\r\n//   clear: jest.fn().mockImplementation(() => {\r\n//     localStorageItems = {};\r\n//   }),\r\n//   removeItem: jest.fn().mockImplementation((key) => {\r\n//     localStorageItems[key] = undefined;\r\n//   }),\r\n// };\r\n\r\n// export let localStorageItems = {};\r\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AAEA;AAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE3B,SAASA,mBAAmB,CACjCC,EAAE,EAOF;EAAA,+EADI,CAAC,CAAC;IAAA,2BAJJC,cAAc;IAAdA,cAAc,oCAAG,CAAC,CAAC;IAAA,kBAEnBC,KAAK;IAALA,KAAK,2BAAG,IAAAC,iBAAU,EAACF,cAAc,CAAC;IAC/BG,aAAa;EAGlB,SAASC,OAAO,QAAe;IAAA,IAAZC,QAAQ,SAARA,QAAQ;IACzB,oBAAO,gCAAC,oBAAQ;MAAC,KAAK,EAAEJ;IAAM,GAAEI,QAAQ,CAAY;EACtD;EACA;IAASJ,KAAK,EAALA;EAAK,GAAK,IAAAK,cAAM,EAACP,EAAE;IAAIQ,OAAO,EAAEH;EAAO,GAAKD,aAAa,EAAG;AACvE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"}