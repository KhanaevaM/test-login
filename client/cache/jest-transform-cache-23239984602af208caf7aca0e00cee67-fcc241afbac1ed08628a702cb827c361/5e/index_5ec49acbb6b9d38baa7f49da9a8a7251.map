{"version":3,"names":["persistConfig","key","storage","version","persistedReducer","persistReducer","authReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","setupStore","preloadedState"],"sources":["index.js"],"sourcesContent":["import authReducer from \"../state\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nimport {\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = { key: \"root\", storage, version: 1 };\r\nconst persistedReducer = persistReducer(persistConfig, authReducer);\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nexport default store;\r\n\r\nexport const setupStore = (preloadedState) => {\r\n  return configureStore({\r\n    reducer: authReducer,\r\n    preloadedState,\r\n  });\r\n};\r\n"],"mappings":";;;;;;AAAA;AACA;AAEA;AASA;AAAgD;AAEhD,IAAMA,aAAa,GAAG;EAAEC,GAAG,EAAE,MAAM;EAAEC,OAAO,EAAPA,mBAAO;EAAEC,OAAO,EAAE;AAAE,CAAC;AAC1D,IAAMC,gBAAgB,GAAG,IAAAC,4BAAc,EAACL,aAAa,EAAEM,iBAAW,CAAC;AACnE,IAAMC,KAAK,GAAG,IAAAC,uBAAc,EAAC;EAC3BC,OAAO,EAAEL,gBAAgB;EACzBM,UAAU,EAAE,oBAACC,oBAAoB;IAAA,OAC/BA,oBAAoB,CAAC;MACnBC,iBAAiB,EAAE;QACjBC,cAAc,EAAE,CAACC,mBAAK,EAAEC,uBAAS,EAAEC,mBAAK,EAAEC,qBAAO,EAAEC,mBAAK,EAAEC,sBAAQ;MACpE;IACF,CAAC,CAAC;EAAA;AACN,CAAC,CAAC;AAAC,eAEYZ,KAAK;AAAA;AAEb,IAAMa,UAAU,GAAG,SAAbA,UAAU,CAAIC,cAAc,EAAK;EAC5C,OAAO,IAAAb,uBAAc,EAAC;IACpBC,OAAO,EAAEH,iBAAW;IACpBe,cAAc,EAAdA;EACF,CAAC,CAAC;AACJ,CAAC;AAAC"}